#!/usr/bin/env bash

set -euo pipefail

if [[ "$(uname)" != "Darwin" ]]; then
  shopt -s inherit_errexit
fi

main() {
  local tarball_path version os arch

  while [ "${#}" != 0 ]; do
    case "${1}" in
      --version)
        version="${2}"
        shift 2
        ;;

      --tarballPath)
        tarball_path="${2}"
        shift 2
        ;;

      --os)
        os="${2}"
        shift 2
        ;;

      --arch)
        arch="${2}"
        shift 2
        ;;

      "")
        shift
        ;;

      *)
        echo "unknown argument \"${1}\""
        exit 1
    esac
  done

  if [[ -z "${version:-}" || -z "${tarball_path:-}" ]]; then
    echo "version and tarballPath are required required"
    exit 1
  fi

  if [[ $(basename -- "${tarball_path}") == *"noble"* ]]; then
    echo "Running noble test..."

    # When --os and --arch are provided, the --platform arg is passed to docker build and run commands.
    # This assumes the runner has qemu and buildkit set up, and that the docker daemon and cli experimental features are enabled.
    docker_platform_arg=""
    if [[ "${os}" != "" && "${arch}" != "" ]]; then
      docker_platform_arg="--platform ${os}/${arch}"
      echo "docker commands will be called with ${docker_platform_arg}"
    fi

    docker build -t test -f noble/Dockerfile ${docker_platform_arg} noble/
    docker run --rm -v "$(dirname -- "${tarball_path}"):/tarball_path" ${docker_platform_arg} test --version "${version}" --os "${os}" --arch "${arch}"
  fi

}

main "${@:-}"
